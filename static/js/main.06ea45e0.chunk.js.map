{"version":3,"sources":["images/Logo 3 slight white.svg","images/CloStat/CloStat.png","images/MarkIt/Markit.png","images/Paint The Town/Lobby_2.gif","images/Shoperone/Shoperone.png","Components/Navbar.js","Components/Home.js","Components/Project.js","Components/About.js","Components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","id","src","Logo","alt","activeClass","to","spy","smooth","offset","duration","Home","Project","cloStatIMG","href","target","MarkItIMG","ShoperoneIMG","PTTIMG","About","Contact","useState","name","email","message","disabled","emailSent","state","setState","handleChange","event","value","type","checked","onSubmit","preventDefault","Axios","post","then","res","data","success","catch","err","for","onChange","htmlfor","rows","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,iD,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,yLCgE5BC,EA5DA,WACX,OACI,yBAAKC,UAAU,MAAMC,GAAG,OACpB,yBAAKD,UAAU,QACX,yBAAKE,IAAKC,IAAMC,IAAI,KACpB,+CAEJ,yBAAKJ,UAAU,QACX,kBAAC,OAAD,CACIA,UAAU,aACVK,YAAY,SACZC,GAAG,OACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,EACRC,SAAU,KAEV,qCAGJ,kBAAC,OAAD,CACIV,UAAU,aACVK,YAAY,SACZC,GAAG,UACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,EACRC,SAAU,KAEV,wCAGJ,kBAAC,OAAD,CACIV,UAAU,aACVK,YAAY,SACZC,GAAG,QACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,EACRC,SAAU,KAEV,sCAGJ,kBAAC,OAAD,CACIV,UAAU,aACVK,YAAY,SACZC,GAAG,UACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,EACRC,SAAU,KAEV,2CCZLC,EA1CF,WACT,OACI,yBAAKX,UAAU,OAAOC,GAAG,QACrB,0BAAMD,UAAU,QACZ,0BAAMC,GAAG,aACL,wCACA,wBAAID,UAAU,UAAd,eACA,wBAAIA,UAAU,UAAd,eAEJ,0BAAMC,GAAG,cACL,yDACA,wBAAID,UAAU,QAAd,eAGR,yBAAKA,UAAU,WACX,kBAAC,OAAD,CACIA,UAAU,aACVK,YAAY,SACZC,GAAG,UACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,EACRC,SAAU,KAEV,4BAAQV,UAAU,QAAlB,iBAEJ,kBAAC,OAAD,CACIA,UAAU,aACVK,YAAY,SACZC,GAAG,UACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,EACRC,SAAU,KAEV,4BAAQV,UAAU,WAAlB,kB,oECmFLY,EAnHC,WACZ,OACI,yBAAKZ,UAAU,UAAUC,GAAG,WACxB,wBAAID,UAAU,QAAd,WACA,yBAAKA,UAAU,SACX,yBAAKA,UAAU,4BACX,yBACIE,IAAKW,IACLT,IAAK,uBACLJ,UAAU,QAEd,yBAAKA,UAAU,eACX,yBAAKA,UAAU,SACX,uCACA,uBACIc,KAAM,wCACNC,OAAQ,UAER,4CAGR,iNAQR,yBAAKf,UAAU,eACX,yBACIE,IAAKc,IACLZ,IAAK,sBACLJ,UAAU,SAEd,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SACX,sCACA,uBACIc,KAAM,mCACNC,OAAQ,UAER,4CAGR,6QAUR,yBAAKf,UAAU,kBACX,yBACIE,IAAKe,IACLb,IAAK,yBACLJ,UAAU,QAEd,yBAAKA,UAAU,eACX,yBAAKA,UAAU,SACX,yCACA,uBACIc,KACI,sGAEJC,OAAQ,UAER,0CAGR,6QASR,yBAAKf,UAAU,YACX,yBACIE,IAAKgB,IACLd,IAAK,8BACLJ,UAAU,SAEd,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SACX,8CACA,uBACIc,KACI,6CAEJC,OAAQ,UAER,4CAGR,4TCzETI,EA/BD,WACV,OACI,yBAAKnB,UAAU,QAAQC,GAAG,SACtB,wBAAID,UAAU,QAAd,SACA,yBAAKA,UAAU,SACX,kDAEI,4BACI,qDACA,4CACA,4DAEJ,6BAPJ,kBAQI,4BACI,4DACA,yDACA,iDAEJ,6BAbJ,wBAeI,4BACI,6BACA,6BACA,kC,iCC2FToB,EAhHC,WAAO,IAAD,EACQC,mBAAS,CAC/BC,KAAM,GACNC,MAAO,GACPC,QAAS,GACTC,UAAU,EACVC,UAAW,OANG,mBACXC,EADW,KACJC,EADI,KASZN,EAAOK,EAAML,KACbC,EAAQI,EAAMJ,MACdC,EAAUG,EAAMH,QAChBC,EAAWE,EAAMF,SACjBC,EAAYC,EAAMD,UAElBG,EAAe,SAACC,GAClB,IAAMf,EAASe,EAAMf,OACfgB,EACc,aAAhBhB,EAAOiB,KAAsBjB,EAAOkB,QAAUlB,EAAOgB,MACnDT,EAAOP,EAAOO,KAEpBM,EAAS,eACJN,EAAOS,KAiChB,OACI,yBAAK/B,UAAU,UAAUC,GAAG,WACxB,yBAAKD,UAAU,QACX,0BAAMkC,SAhCG,SAACJ,GAClBA,EAAMK,iBAENP,EAAS,CACLH,UAAU,IAGdW,IAAMC,KAAK,kCAAmCV,GACzCW,MAAK,SAACC,GACCA,EAAIC,KAAKC,QACTb,EAAS,CACLH,UAAU,EACVC,WAAW,IAGfE,EAAS,CACLH,UAAU,EACVC,WAAW,OAItBgB,OAAM,SAACC,GACJf,EAAS,CACLH,UAAU,EACVC,WAAW,SASX,wBAAI1B,UAAU,SAAd,cACA,yBAAKA,UAAU,QACX,yBAAKA,UAAU,cACX,2BAAO4C,IAAI,QAAX,OAEI,2BACIZ,KAAK,OACL/B,GAAG,OACHqB,KAAK,OACLS,MAAOT,EACPuB,SAAUhB,MAItB,yBAAK7B,UAAU,eACX,2BAAO8C,QAAQ,SAAf,QAEI,2BACId,KAAK,OACL/B,GAAG,QACHqB,KAAK,QACLS,MAAOR,EACPsB,SAAUhB,OAK1B,yBAAK7B,UAAU,WACX,2BAAO4C,IAAI,WAAX,kBAEI,8BACItB,KAAK,UACLS,MAAOP,EACPqB,SAAUhB,EACVkB,KAAM,MAIlB,4BAAQf,KAAK,SAASP,SAAUA,GAAhC,WAGe,IAAdC,GACG,uBAAG1B,UAAU,eAAb,eAEW,IAAd0B,GACG,uBAAG1B,UAAU,WAAb,sB,MCvFTgD,MAZf,WACI,OACI,0BAAMhD,UAAU,OACZ,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCJQiD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvB,MAAK,SAAAwB,GACJA,EAAaC,gBAEdrB,OAAM,SAAAsB,GACLC,QAAQD,MAAMA,EAAMxC,c","file":"static/js/main.06ea45e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo 3 slight white.a0dfbfdb.svg\";","module.exports = __webpack_public_path__ + \"static/media/CloStat.5a4281e3.png\";","module.exports = __webpack_public_path__ + \"static/media/Markit.8d106436.png\";","module.exports = __webpack_public_path__ + \"static/media/Lobby_2.f70133e8.gif\";","module.exports = __webpack_public_path__ + \"static/media/Shoperone.8e709506.png\";","import React from \"react\";\r\nimport Logo from \"../images/Logo 3 slight white.svg\";\r\nimport { Link as ScrollLink } from \"react-scroll\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"Nav\" id=\"nav\">\r\n            <div className=\"Logo\">\r\n                <img src={Logo} alt=\"\" />\r\n                <h1>&nbsp;Sam Nye VR</h1>\r\n            </div>\r\n            <div className=\"Menu\">\r\n                <ScrollLink\r\n                    className=\"ScrollLink\"\r\n                    activeClass=\"active\"\r\n                    to=\"home\"\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={0}\r\n                    duration={500}\r\n                >\r\n                    <h5>Home</h5>\r\n                </ScrollLink>\r\n\r\n                <ScrollLink\r\n                    className=\"ScrollLink\"\r\n                    activeClass=\"active\"\r\n                    to=\"project\"\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={0}\r\n                    duration={500}\r\n                >\r\n                    <h5>Project</h5>\r\n                </ScrollLink>\r\n\r\n                <ScrollLink\r\n                    className=\"ScrollLink\"\r\n                    activeClass=\"active\"\r\n                    to=\"about\"\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={0}\r\n                    duration={500}\r\n                >\r\n                    <h5>About</h5>\r\n                </ScrollLink>\r\n\r\n                <ScrollLink\r\n                    className=\"ScrollLink\"\r\n                    activeClass=\"active\"\r\n                    to=\"contact\"\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={0}\r\n                    duration={500}\r\n                >\r\n                    <h5>Contact</h5>\r\n                </ScrollLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Link as ScrollLink } from \"react-scroll\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"Home\" id=\"home\">\r\n            <span className=\"desc\">\r\n                <span id=\"firstLine\">\r\n                    <h2>I am&nbsp;</h2>\r\n                    <h1 className=\"myName\">Sam Nye&nbsp;</h1>\r\n                    <h2 className=\"myRole\">the VR guy</h2>\r\n                </span>\r\n                <span id=\"secondLine\">\r\n                    <h2>I work to make dreams&nbsp;</h2>\r\n                    <h2 className=\"fall\">come true</h2>\r\n                </span>\r\n            </span>\r\n            <div className=\"buttons\">\r\n                <ScrollLink\r\n                    className=\"ScrollLink\"\r\n                    activeClass=\"active\"\r\n                    to=\"project\"\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={0}\r\n                    duration={500}\r\n                >\r\n                    <button className=\"work\">View My Work</button>\r\n                </ScrollLink>\r\n                <ScrollLink\r\n                    className=\"ScrollLink\"\r\n                    activeClass=\"active\"\r\n                    to=\"contact\"\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={0}\r\n                    duration={500}\r\n                >\r\n                    <button className=\"contact\">Contact Me</button>\r\n                </ScrollLink>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport cloStatIMG from \"../images/CloStat/CloStat.png\";\r\nimport MarkItIMG from \"../images/MarkIt/Markit.png\";\r\nimport PTTIMG from \"../images/Paint The Town/Lobby_2.gif\";\r\nimport ShoperoneIMG from \"../images/Shoperone/Shoperone.png\";\r\n\r\nconst Project = () => {\r\n    return (\r\n        <div className=\"Project\" id=\"project\">\r\n            <h1 className=\"left\">Project</h1>\r\n            <div className=\"right\">\r\n                <div className=\"card clostat projectlogo\">\r\n                    <img\r\n                        src={cloStatIMG}\r\n                        alt={\"CloStat Landing Page\"}\r\n                        className=\"odd\"\r\n                    />\r\n                    <div className=\"content odd\">\r\n                        <div className=\"title\">\r\n                            <h1>CloStat</h1>\r\n                            <a\r\n                                href={\"https://github.com/inviswings/CloStat\"}\r\n                                target={\"_blank\"}\r\n                            >\r\n                                <button>Github</button>\r\n                            </a>\r\n                        </div>\r\n                        <p>\r\n                            CloStat is a virtual closet that lets the user keep\r\n                            track of the collection of their clothes. With\r\n                            display of statistics of cloth status and weather\r\n                            data for easier management.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card markit\">\r\n                    <img\r\n                        src={MarkItIMG}\r\n                        alt={\"MarkIt Landing Page\"}\r\n                        className=\"even\"\r\n                    />\r\n                    <div className=\"content even\">\r\n                        <div className=\"title\">\r\n                            <h1>MarkIt</h1>\r\n                            <a\r\n                                href={\"https://github.com/Uye121/Markit\"}\r\n                                target={\"_blank\"}\r\n                            >\r\n                                <button>Github</button>\r\n                            </a>\r\n                        </div>\r\n                        <p>\r\n                            Lorem ipsum dolor sit amet, consectetur adipisicing\r\n                            elit. Eius, sunt nam nostrum repellendus deserunt\r\n                            minima, consectetur soluta inventore, alias totam\r\n                            dolore obcaecati temporibus recusandae dolorum\r\n                            assumenda ex eum reprehenderit ipsam?\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card shoperone\">\r\n                    <img\r\n                        src={ShoperoneIMG}\r\n                        alt={\"Shoperone Landing Page\"}\r\n                        className=\"odd\"\r\n                    />\r\n                    <div className=\"content odd\">\r\n                        <div className=\"title\">\r\n                            <h1>Shoperone</h1>\r\n                            <a\r\n                                href={\r\n                                    \"https://www.figma.com/proto/N072w32YNeChnCQqdisv6pT1/Shoperone?node-id=178%3A536&scaling=scale-down\"\r\n                                }\r\n                                target={\"_blank\"}\r\n                            >\r\n                                <button>Link</button>\r\n                            </a>\r\n                        </div>\r\n                        <p>\r\n                            Lorem ipsum dolor sit amet, consectetur adipisicing\r\n                            elit. Eius, sunt nam nostrum repellendus deserunt\r\n                            minima, consectetur soluta inventore, alias totam\r\n                            dolore obcaecati temporibus recusandae dolorum\r\n                            assumenda ex eum reprehenderit ipsam?\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card ptt\">\r\n                    <img\r\n                        src={PTTIMG}\r\n                        alt={\"Paint the Town Landing Page\"}\r\n                        className=\"even\"\r\n                    />\r\n                    <div className=\"content even\">\r\n                        <div className=\"title\">\r\n                            <h1>Paint the Town</h1>\r\n                            <a\r\n                                href={\r\n                                    \"https://github.com/TritonXR/Paint-the-Town\"\r\n                                }\r\n                                target={\"_blank\"}\r\n                            >\r\n                                <button>Github</button>\r\n                            </a>\r\n                        </div>\r\n                        <p>\r\n                            Paint the Town is a social VR experience. Players\r\n                            enter a world devoid of color. Each player can\r\n                            interact with the environment, painting a single\r\n                            color onto the space. As players explore the scene,\r\n                            their colors mix, revealing the intended colors of\r\n                            the world, bringing it to life.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Project;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className=\"About\" id=\"about\">\r\n            <h1 className=\"left\">About</h1>\r\n            <div className=\"right\">\r\n                <span>\r\n                    I specialized in:\r\n                    <ul>\r\n                        <li>Front End Development</li>\r\n                        <li>UI/UX Design</li>\r\n                        <li>Virtual Reality Development</li>\r\n                    </ul>\r\n                    <br />I believe that:\r\n                    <ul>\r\n                        <li>Teamworks are key to success</li>\r\n                        <li>Good designs are seemless</li>\r\n                        <li>VR is the future</li>\r\n                    </ul>\r\n                    <br />\r\n                    Skills I am proud of:\r\n                    <ul>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Axios from \"axios\";\r\n\r\nconst Contact = () => {\r\n    const [state, setState] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        message: \"\",\r\n        disabled: false,\r\n        emailSent: null,\r\n    });\r\n\r\n    const name = state.name;\r\n    const email = state.email;\r\n    const message = state.message;\r\n    const disabled = state.disabled;\r\n    const emailSent = state.emailSent;\r\n\r\n    const handleChange = (event) => {\r\n        const target = event.target;\r\n        const value =\r\n            target.type === \"checkbox\" ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        setState({\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        setState({\r\n            disabled: true,\r\n        });\r\n\r\n        Axios.post(\"http://localhost:3030/api/email\", state)\r\n            .then((res) => {\r\n                if (res.data.success) {\r\n                    setState({\r\n                        disabled: false,\r\n                        emailSent: true,\r\n                    });\r\n                } else {\r\n                    setState({\r\n                        disabled: false,\r\n                        emailSent: false,\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setState({\r\n                    disabled: false,\r\n                    emailSent: false,\r\n                });\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"Contact\" id=\"contact\">\r\n            <div className=\"page\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <h1 className=\"title\">Contact Me</h1>\r\n                    <div className=\"info\">\r\n                        <div className=\"name_field\">\r\n                            <label for=\"name\">\r\n                                Name\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    value={name}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"email_field\">\r\n                            <label htmlfor=\"email\">\r\n                                Email\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    value={email}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"message\">\r\n                        <label for=\"message\">\r\n                            Leave A Message\r\n                            <textarea\r\n                                name=\"message\"\r\n                                value={message}\r\n                                onChange={handleChange}\r\n                                rows={6}\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                    <button type=\"submit\" disabled={disabled}>\r\n                        Submit\r\n                    </button>\r\n                    {emailSent === true && (\r\n                        <p className=\"success-msg\">Email Sent</p>\r\n                    )}\r\n                    {emailSent === false && (\r\n                        <p className=\"err-msg\">Email Not Sent</p>\r\n                    )}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\nimport Navbar from \"./Components/Navbar\";\nimport Home from \"./Components/Home\";\nimport Project from \"./Components/Project\";\nimport About from \"./Components/About\";\nimport Contact from \"./Components/Contact\";\n\nimport \"./css/Main.css\";\n\nfunction App() {\n    return (\n        <body className=\"App\">\n            <Navbar />\n            <Home />\n            <Project />\n            <About />\n            <Contact />\n        </body>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}